
service: sample-serverless-project
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

plugins:
  - serverless-dynamodb-local
  - serverless-offline #serverless-offline needs to be last in the list



custom:
  todosTableName: 'todos-table'
  usersTableName: 'users-table'
  endpoints:
    dynamodb-url: 'http://localhost:8000'

  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    migration: 
      dir: file(./src/Resources.yml)

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'
  environment:
    TODOS_TABLE: ${self:custom.todosTableName}
    USERS_TABLE: ${self:custom.usersTableName}

# you can overwrite defaults here
# stage: dev
#  region: us-east-1



functions:
  app:
      handler: src/handler.handler
      events:
        - http: ANY /
        - http: 'ANY {proxy+}'
  samplePost:
      handler: src/handler.handler
      events:
        - http: 'POST /samplePost'
resources: 
  ${file(./src/Resources.yml)}
# resources:
#   Resources:
#     TodosTable:
#       Type: 'AWS::DynamoDB::Table'
#       Properties:
#         TableName: ${self:custom.todosTableName}
#         AttributeDefinitions:
#           - AttributeName: userId
#             AttributeType: S
#         KeySchema:
#           - AttributeName: userId
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
